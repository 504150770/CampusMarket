<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjq.programmer.dao.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.yjq.programmer.domain.OrderItem">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="product_id" jdbcType="CHAR" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_photo" jdbcType="VARCHAR" property="productPhoto" />
    <result column="product_price" jdbcType="DECIMAL" property="productPrice" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="sum_price" jdbcType="DECIMAL" property="sumPrice" />
    <result column="store_id" jdbcType="CHAR" property="storeId" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, product_id, product_name, product_photo, product_price, quantity, sum_price,
    store_id, `state`
  </sql>
  <select id="selectByExample" parameterType="com.yjq.programmer.domain.OrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_item
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yjq.programmer.domain.OrderItemExample">
    delete from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yjq.programmer.domain.OrderItem">
    insert into order_item (id, order_id, product_id,
      product_name, product_photo, product_price,
      quantity, sum_price, store_id,
      `state`)
    values (#{id,jdbcType=CHAR}, #{orderId,jdbcType=CHAR}, #{productId,jdbcType=CHAR},
      #{productName,jdbcType=VARCHAR}, #{productPhoto,jdbcType=VARCHAR}, #{productPrice,jdbcType=DECIMAL},
      #{quantity,jdbcType=INTEGER}, #{sumPrice,jdbcType=DECIMAL}, #{storeId,jdbcType=CHAR},
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yjq.programmer.domain.OrderItem">
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productPhoto != null">
        product_photo,
      </if>
      <if test="productPrice != null">
        product_price,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="sumPrice != null">
        sum_price,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=CHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPhoto != null">
        #{productPhoto,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null">
        #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yjq.programmer.domain.OrderItemExample" resultType="java.lang.Integer">
    select count(*) from order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=CHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productPhoto != null">
        product_photo = #{record.productPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.productPrice != null">
        product_price = #{record.productPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.sumPrice != null">
        sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_item
    set id = #{record.id,jdbcType=CHAR},
      order_id = #{record.orderId,jdbcType=CHAR},
      product_id = #{record.productId,jdbcType=CHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_photo = #{record.productPhoto,jdbcType=VARCHAR},
      product_price = #{record.productPrice,jdbcType=DECIMAL},
      quantity = #{record.quantity,jdbcType=INTEGER},
      sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      store_id = #{record.storeId,jdbcType=CHAR},
      `state` = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjq.programmer.domain.OrderItem">
    update order_item
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=CHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=CHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPhoto != null">
        product_photo = #{productPhoto,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null">
        product_price = #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="sumPrice != null">
        sum_price = #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=CHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yjq.programmer.domain.OrderItem">
    update order_item
    set order_id = #{orderId,jdbcType=CHAR},
      product_id = #{productId,jdbcType=CHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_photo = #{productPhoto,jdbcType=VARCHAR},
      product_price = #{productPrice,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=INTEGER},
      sum_price = #{sumPrice,jdbcType=DECIMAL},
      store_id = #{storeId,jdbcType=CHAR},
      `state` = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>
